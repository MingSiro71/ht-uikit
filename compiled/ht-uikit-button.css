/* HT-UIkit scss 1.0.0 */
/* Base: UIkit 3.1.7 | http://www.getuikit.com */
/* Edit: Hentech */
/* 
 * _colors.scss: Defines colors for areas and objects
 *
    *base: Base color and standard text colors
    *bicolor: The second base color
    *tricolor: The third base color
    *danger: Areas which user should not touch in usual case use this colors
    *primary: Colors for object which user should watch at first
    *secondary: Colors for object which is important next to primary
    *accent: Accent color for object which is no relation for user flow
    *toolbar: Colers for user interface which can be find that not the parts of page, but utility object
    *information: Colors for infomation message or telop
    *warning: Colors for warning message or telop
    *error: Colors for error message or telop
 */
/* 
 * base
 */
/* 
 * bicolor
 */
/* 
 * tricolor
 */
/* 
 * danger
 */
/* 
 * primary
 */
/* 
 * secondary
 */
/* 
 * accent
 */
/* 
 * toolbar
 */
/* 
 * infomation
 */
/* 
 * warning
 */
/* 
 * error
 */
/* ========================================================================
   Component: Button
 ========================================================================== */
/*
 * 1. Remove margins in Chrome, Safari and Opera.
 * 2. Remove borders for `button`.
 * 3. Address `overflow` set to `hidden` in IE.
 * 4. Correct `font` properties and `color` not being inherited for `button`.
 * 5. Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 6. Style
 * 7. `line-height` is used to create a height because it also centers the text vertically for `a` elements.
 *    Better would be to use height and flexbox to center the text vertically but flexbox doesn't work in Firefox on `button` elements.
 * 8. Align text if button has a width
 * 9. Required for `a`.
 */
.uk-button {
  /* 1 */
  margin: 0;
  /* 2 */
  border: none;
  /* 3 */
  overflow: visible;
  /* 4 */
  font: inherit;
  color: inherit;
  /* 5 */
  text-transform: none;
  /* 6 */
  display: inline-block;
  box-sizing: border-box;
  padding: 0 30px;
  vertical-align: middle;
  font-size: 0.875rem;
  /* 7 */
  line-height: 38px;
  /* 8 */
  text-align: center;
  /* 9 */
  text-decoration: none;
  text-transform: uppercase;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color, border-color;
}

.uk-button .ht-uk-button-oneliner {
  line-height: 0.875rem;
  white-space: nowrap;
}

.uk-button:not(:disabled) {
  cursor: pointer;
}

.uk-button *::selection {
  background: transparent;
}

/*
 * Remove the inner border and padding in Firefox.
 */
.uk-button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/* Hover */
.uk-button:hover {
  /* 9 */
  text-decoration: none;
}

/* Focus */
.uk-button:focus {
  outline: none;
}

/* OnClick + Active */
/* Style modifiers
 ========================================================================== */
/*
 * Default
 */
.uk-button-default {
  background-color: transparent;
  color: inherit;
  border: 1px solid rgba(127, 127, 127, 0.3);
}

.uk-button-default:hover, .uk-button-default:focus {
  background-color: rgba(255, 255, 255, 0.2);
  border-color: rgba(127, 127, 127, 0.5);
}

.uk-button-default:active, .uk-button-default .uk-active {
  background-color: rgba(255, 255, 255, 0.4);
  border-color: rgba(127, 127, 127, 0.6);
}

/*
 * Primary
 */
.uk-button-primary {
  background-color: #30c297;
  color: #fcfcf9;
  border: 1px solid transparent;
}

.uk-button-primary rect, .uk-button-primary path, .uk-button-primary polylie, .uk-button-primary line {
  stroke: #fcfcf9;
}

/*
 * Secondary
 */
.uk-button-secondary {
  background-color: #30c297;
  color: #fcfcf9;
  border: 1px solid transparent;
}

.uk-button-secondary rect, .uk-button-secondary path, .uk-button-secondary polylie, .uk-button-secondary line {
  stroke: #fcfcf9;
}

/*
 * Warning
 */
.uk-button-warning {
  background-color: #444742;
  color: #f2f2f2;
  border: 1px solid transparent;
}

.uk-button-warning rect, .uk-button-warning path, .uk-button-warning polylie, .uk-button-warning line {
  stroke: #f2f2f2;
}

/*
 * Danger
 */
.uk-button-danger {
  background-color: #ff4529;
  color: #444742;
  border: 1px solid transparent;
}

.uk-button-danger:hover, .uk-button-danger:focus {
  background-color: #ffcac2;
}

.uk-button-danger:active, .uk-button-danger .uk-active {
  background-color: #ffcac2;
}

/*
 * Disabled
 * The same for all style modifiers
 */
.uk-button-default:disabled,
.uk-button-primary:disabled,
.uk-button-secondary:disabled,
.uk-button-danger:disabled {
  background-color: transparent;
  color: var(--sub-text-color);
  border-color: #e5e5e5;
}

/* Size modifiers
 ========================================================================== */
.uk-button-small {
  padding: 0 15px;
  line-height: 28px;
  font-size: 0.875rem;
}

.uk-button-large {
  padding: 0 40px;
  line-height: 53px;
  font-size: 0.875rem;
}

/* Text modifiers
 ========================================================================== */
/*
 * Text
 * 1. Reset
 * 2. Style
 */
.uk-button-text {
  /* 1 */
  padding: 0;
  line-height: 1.5;
  background: none;
  /* 2 */
  color: #333;
  position: relative;
}

.uk-button-text::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  right: 100%;
  border-bottom: 1px solid #333;
  transition: right 0.3s ease-out;
}

/* Hover + Focus */
.uk-button-text:hover,
.uk-button-text:focus {
  color: #333;
}

.uk-button-text:hover::before,
.uk-button-text:focus::before {
  right: 0;
}

/* Disabled */
.uk-button-text:disabled {
  color: var(--sub-text-color);
}

.uk-button-text:disabled::before {
  display: none;
}

/*
 * Link
 * 1. Reset
 * 2. Style
 */
.uk-button-link {
  /* 1 */
  padding: 0;
  line-height: 1.5;
  background: none;
  /* 2 */
  color: var(--text-color);
}

/* Hover + Focus */
.uk-button-link:hover,
.uk-button-link:focus {
  color: var(--sub-text-color);
  text-decoration: underline;
}

/* Disabled */
.uk-button-link:disabled {
  color: var(--sub-text-color);
  text-decoration: none;
}

/* Group
 ========================================================================== */
/*
 * 1. Using `flex` instead of `inline-block` to prevent whitespace betweent child elements
 * 2. Behave like button
 * 3. Create position context
 */
.uk-button-group {
  /* 1 */
  display: inline-flex;
  /* 2 */
  vertical-align: middle;
  /* 3 */
  position: relative;
}

/* Group
     ========================================================================== */
/*
     * Collapse border
     */
.uk-button-group > .uk-button:nth-child(n+2),
.uk-button-group > div:nth-child(n+2) .uk-button {
  margin-left: -1px;
}

/*
     * Create position context to superimpose the successor elements border
     * Known issue: If you use an `a` element as button and an icon inside,
     * the active state will not work if you click the icon inside the button
     * Workaround: Just use a `button` or `input` element as button
     */
.uk-button-group .uk-button:hover,
.uk-button-group .uk-button:focus,
.uk-button-group .uk-button:active,
.uk-button-group .uk-button.uk-active {
  position: relative;
  z-index: 1;
}
/*# sourceMappingURL=ht-uikit-button.css.map */