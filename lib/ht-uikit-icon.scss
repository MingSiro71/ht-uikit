/* HT-UIkit scss 1.0.0 */
/* Base: UIkit 3.1.7 | http://www.getuikit.com */ 
/* Edit: Hentech */

@import "config/_font.scss";
@import "config/_colors.scss";
@import "config/_layout.scss";

/* ========================================================================
   Component: Icon
 ========================================================================== */
/*
 * Note: 1. - 7. is required for `button` elements. Needed for Close and Form Icon component.
 * 1. Remove margins in Chrome, Safari and Opera.
 * 2. Remove borders for `button`.
 * 3. Remove border-radius in Chrome.
 * 4. Address `overflow` set to `hidden` in IE.
 * 5. Correct `font` properties and `color` not being inherited for `button`.
 * 6. Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 7. Remove default `button` padding and background color
 * 8. Style
 * 9. Adjust container height fits to icon
 */
.uk-icon {
  /* 1 */
  margin: 0;
  /* 2 */
  border: none;
  /* 3 */
  border-radius: 0;
  /* 4 */
  overflow: visible;
  /* 5 */
  font: inherit;
  color: inherit;
  /* 6 */
  text-transform: none;
  /* 7. */
  padding: 0;
  background-color: transparent;
  /* 8 */
  display: inline-block;
  /* 9 */
  line-height: 0;
}
/* Required for `button`. */
button.uk-icon:not(:disabled) {
  cursor: pointer;
}
/*
 * Remove the inner border and padding in Firefox.
 */
.uk-icon::-moz-focus-inner {
  border: 0;
  padding: 0;
}
/*
 * Set the fill and stroke color of all SVG elements to the current text color
 */
.uk-icon:not(.uk-icon-original):not(.uk-spinner) [fill*='#']:not(.uk-icon-original):not(.uk-spinner) {
  fill: currentcolor;
}
.uk-icon:not(.uk-icon-original):not(.uk-spinner) [stroke*='#']:not(.uk-icon-original):not(.uk-spinner) {
  stroke: currentcolor;
}
/*
 * Fix Firefox blurry SVG rendering: https://bugzilla.mozilla.org/show_bug.cgi?id=1046835
 */
.uk-icon > * {
  transform: translate(0, 0);
}
/* Image modifier
 ========================================================================== */
/*
 * Display images in icon dimensions
 */
.uk-icon-image {
  width: 20px;
  height: 20px;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: contain;
  vertical-align: middle;
}
/* Style modifiers
 ========================================================================== */
/*
 * Link
 */
a.uk-icon,.uk-link.uk-icon,a .uk-icon,.uk-link .uk-icon {
  color: map-get($base-color, link);
  &:active,&:hover,&:focus {
    color: map-get($base-color, link-ontouch);
  }
  &:visited {
    color: map-get($base-color, link);
  }
}
.ht-bicolor a.uk-icon,.ht-bicolor .uk-link.uk-icon,.ht-bicolor a .uk-icon,.ht-bicolor .uk-link .uk-icon,
a.ht-bicolor.uk-icon,.ht-bicolor.uk-link.uk-icon,a.ht-bicolor .uk-icon,.ht-bicolor.uk-link .uk-icon {
  color: map-get($bicolor-color, link);
  &:active,&:hover,&:focus {
    color: map-get($bicolor-color, link-ontouch);
  }
  &:visited {
    color: map-get($bicolor-color, link);
  }
}
.ht-tricolor a.uk-icon,.ht-tricolor .uk-link.uk-icon,.ht-tricolor a .uk-icon,.ht-tricolor .uk-link .uk-icon,
a.ht-tricolor.uk-icon,.ht-tricolor.uk-link.uk-icon,a.ht-tricolor .uk-icon,.ht-tricolor.uk-link .uk-icon {
  color: map-get($tricolor-color, link);
  &:active,&:hover,&:focus {
    color: map-get($tricolor-color, link-ontouch);
  }
  &:visited {
    color: map-get($tricolor-color, link);
  }
}
.ht-toolbar a.uk-icon,.ht-toolbar .uk-link.uk-icon,.ht-toolbar a .uk-icon,.ht-toolbar .uk-link .uk-icon,
a.ht-toolbar.uk-icon,.ht-toolbar.uk-link.uk-icon,a.ht-toolbar .uk-icon,.ht-toolbar.uk-link .uk-icon {
  color: map-get($toolbar-color, link);
  &:active,&:hover,&:focus {
    color: map-get($toolbar-color, link-ontouch);
  }
  &:visited {
    color: map-get($toolbar-color, link);
  }
}
.ht-danger a.uk-icon,.ht-danger .uk-link.uk-icon,.ht-danger a .uk-icon,.ht-danger .uk-link .uk-icon,
a.ht-danger.uk-icon,.ht-danger.uk-link.uk-icon,a.ht-danger .uk-icon,.ht-danger.uk-link .uk-icon {
  color: map-get($danger-color, link);
  &:active,&:hover,&:focus {
    color: map-get($danger-color, link-ontouch);
  }
  &:visited {
    color: map-get($danger-color, link);
  }
}
.ht-base a.uk-icon,.ht-base .uk-link.uk-icon,.ht-base a .uk-icon,.ht-base .uk-link .uk-icon,
a.ht-base.uk-icon,.ht-base.uk-link.uk-icon,a.ht-base .uk-icon,.ht-base.uk-link .uk-icon {
  color: map-get($base-color, link);
  &:active,&:hover,&:focus {
    color: map-get($base-color, link-ontouch);
  }
  &:visited {
    color: map-get($base-color, link);
  }
}

a.uk-link-muted.uk-icon,a.uk-link-muted .uk-icon,
.uk-link-muted a.uk-icon,.uk-link-muted a .uk-icon {
  color: map-get($base-color, text);
  &:active,&:hover,&:focus {
    color: map-get($base-color, text);
  }
}
.ht-bicolor a.uk-link-muted.uk-icon,.ht-bicolor a.uk-link-muted .uk-icon,
.ht-bicolor .uk-link-muted a.uk-icon,.ht-bicolor .uk-link-muted a .uk-icon,
a.ht-bicolor.uk-link-muted.uk-icon,a.ht-bicolor.uk-link-muted .uk-icon,
.ht-bicolor.uk-link-muted a.uk-icon,.ht-bicolor.uk-link-muted a .uk-icon,
.uk-link-muted a.ht-bicolor.uk-icon,.uk-link-muted a.ht-bicolor .uk-icon,
.uk-link-muted a .ht-bicolor.uk-icon {
  color: map-get($bicolor-color, text);
  &:active,&:hover,&:focus {
    color: map-get($bicolor-color, text);
  }
}
.ht-tricolor a.uk-link-muted.uk-icon,.ht-tricolor a.uk-link-muted .uk-icon,
.ht-tricolor .uk-link-muted a.uk-icon,.ht-tricolor .uk-link-muted a .uk-icon,
a.ht-tricolor.uk-link-muted.uk-icon,a.ht-tricolor.uk-link-muted .uk-icon,
.ht-tricolor.uk-link-muted a.uk-icon,.ht-tricolor.uk-link-muted a .uk-icon,
.uk-link-muted a.ht-tricolor.uk-icon,.uk-link-muted a.ht-tricolor .uk-icon,
.uk-link-muted a .ht-tricolor.uk-icon {
  color: map-get($tricolor-color, text);
  &:active,&:hover,&:focus {
    color: map-get($tricolor-color, text);
  }
}
.ht-toolbar a.uk-link-muted.uk-icon,.ht-toolbar a.uk-link-muted .uk-icon,
.ht-toolbar .uk-link-muted a.uk-icon,.ht-toolbar .uk-link-muted a .uk-icon,
a.ht-toolbar.uk-link-muted.uk-icon,a.ht-toolbar.uk-link-muted .uk-icon,
.ht-toolbar.uk-link-muted a.uk-icon,.ht-toolbar.uk-link-muted a .uk-icon,
.uk-link-muted a.ht-toolbar.uk-icon,.uk-link-muted a.ht-toolbar .uk-icon,
.uk-link-muted a .ht-toolbar.uk-icon {
  color: map-get($toolbar-color, text);
  &:active,&:hover,&:focus {
    color: map-get($toolbar-color, text);
  }
}
.ht-danger a.uk-link-muted.uk-icon,.ht-danger a.uk-link-muted .uk-icon,
.ht-danger .uk-link-muted a.uk-icon,.ht-danger .uk-link-muted a .uk-icon,
a.ht-danger.uk-link-muted.uk-icon,a.ht-danger.uk-link-muted .uk-icon,
.ht-danger.uk-link-muted a.uk-icon,.ht-danger.uk-link-muted a .uk-icon,
.uk-link-muted a.ht-danger.uk-icon,.uk-link-muted a.ht-danger .uk-icon,
.uk-link-muted a .ht-danger.uk-icon {
  color: map-get($danger-color, text);
  &:active,&:hover,&:focus {
    color: map-get($danger-color, text);
  }
}
.ht-base a.uk-link-muted.uk-icon,.ht-base a.uk-link-muted .uk-icon,
.ht-base .uk-link-muted a.uk-icon,.ht-base .uk-link-muted a .uk-icon,
a.ht-base.uk-link-muted.uk-icon,a.ht-base.uk-link-muted .uk-icon,
.ht-base.uk-link-muted a.uk-icon,.ht-base.uk-link-muted a .uk-icon,
.uk-link-muted a.ht-base.uk-icon,.uk-link-muted a.ht-base .uk-icon,
.uk-link-muted a .ht-base.uk-icon {
  color: map-get($base-color, text);
  &:active,&:hover,&:focus {
    color: map-get($base-color, text);
  }
}
/*
 * Button
 * 1. Center icon vertically and horizontally
 */
.uk-icon-button {
  box-sizing: border-box;
  border-radius: 1000px;
  background-color: rgba(127, 127, 127, 0.3);
  vertical-align: middle;
  /* 1 */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color;
}
/* Hover + Focus */
.uk-icon-button:hover,
.uk-icon-button:focus {
  background-color: rgba(207,207,207,0.4);
  outline: none;
}
/* OnClick + Active */
.uk-icon-button:active,
.uk-active > .uk-icon-button {
  background-color: rgba(255,255,255,0.5);
}
/*
 * Sizing
 */
.uk-icon {
  &.uk-icon-small {
    width: 20px;
    height: 20px;
  }
  &.uk-icon-medium {
    width: 36px;
    height: 36px;
  }
  &.uk-icon-large {
    width: 60px;
    height: 60px;
  }
}
.uk-icon.uk-icon-button {
  &.uk-icon-small {
    width: 36px;
    height: 36px;
    svg {
      width: 20px;
      height: 20px;
    }
  }
  &.uk-icon-medium {
    width: 60px;
    height: 60px;
    svg {
      width: 36px;
      height: 36px;
    }
  }
  &.uk-icon-large {
    width: 108px;
    height: 108px;
    svg {
      width: 60px;
      height: 60px;
    }
  }
}
/* ========================================================================
   Component: Spinner
 ========================================================================== */
/*
 * Adopts `uk-icon`
 */
/* SVG
 ========================================================================== */
 .uk-spinner > * {
  animation: uk-spinner-rotate 1.4s linear infinite;
}
@keyframes uk-spinner-rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(270deg);
  }
}
/*
 * Circle
 */
.uk-spinner > * > * {
  stroke-dasharray: 88px;
  stroke-dashoffset: 0;
  transform-origin: center;
  animation: uk-spinner-dash 1.4s ease-in-out infinite;
  stroke-width: 1;
  stroke-linecap: round;
}
.uk-spinner > svg, .uk-spinner > svg > circle {
  fill: none;
  stroke-width: 0.333333px;
}
.ht-bicolor .uk-spinner > svg,.ht-bicolor .uk-spinner > svg > circle
.ht-bicolor.uk-spinner > svg,.ht-bicolor.uk-spinner > svg > circle {
  stroke: map-get($bicolor-color, link);
}
.ht-tricolor .uk-spinner > svg,.ht-tricolor .uk-spinner > svg > circle
.ht-tricolor.uk-spinner > svg,.ht-tricolor.uk-spinner > svg > circle {
  stroke: map-get($tricolor-color, link);
}
.ht-toolbar .uk-spinner > svg,.ht-toolbar .uk-spinner > svg > circle
.ht-toolbar.uk-spinner > svg,.ht-toolbar.uk-spinner > svg > circle {
  stroke: map-get($toolbar-color, link);
}
.ht-danger .uk-spinner > svg,.ht-danger .uk-spinner > svg > circle
.ht-danger.uk-spinner > svg,.ht-danger.uk-spinner > svg > circle {
  stroke: map-get($danger-color, link);
}
.ht-base .uk-spinner > svg,.ht-base .uk-spinner > svg > circle
.ht-base.uk-spinner > svg,.ht-base.uk-spinner > svg > circle {
  stroke: map-get($base-color, link);
}
@keyframes uk-spinner-dash {
  0% {
    stroke-dashoffset: 88px;
  }
  50% {
    stroke-dashoffset: 22px;
    transform: rotate(135deg);
  }
  100% {
    stroke-dashoffset: 88px;
    transform: rotate(450deg);
  }
}
